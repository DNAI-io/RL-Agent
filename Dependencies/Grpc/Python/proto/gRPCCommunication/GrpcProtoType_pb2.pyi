# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    List as typing___List,
    Optional as typing___Optional,
    Tuple as typing___Tuple,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int
builtin___str = str


class GrpcBaseProtoType(builtin___int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: builtin___int) -> builtin___str: ...
    @classmethod
    def Value(cls, name: builtin___str) -> 'GrpcBaseProtoType': ...
    @classmethod
    def keys(cls) -> typing___List[builtin___str]: ...
    @classmethod
    def values(cls) -> typing___List['GrpcBaseProtoType']: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[builtin___str, 'GrpcBaseProtoType']]: ...
    DOUBLE = typing___cast('GrpcBaseProtoType', 0)
    FLOAT = typing___cast('GrpcBaseProtoType', 1)
    INT32 = typing___cast('GrpcBaseProtoType', 2)
    INT64 = typing___cast('GrpcBaseProtoType', 3)
    UINT32 = typing___cast('GrpcBaseProtoType', 4)
    UINT64 = typing___cast('GrpcBaseProtoType', 5)
    SINT32 = typing___cast('GrpcBaseProtoType', 6)
    SINT64 = typing___cast('GrpcBaseProtoType', 7)
    FIXED32 = typing___cast('GrpcBaseProtoType', 8)
    FIXED64 = typing___cast('GrpcBaseProtoType', 9)
    SFIXED32 = typing___cast('GrpcBaseProtoType', 10)
    SFIXED64 = typing___cast('GrpcBaseProtoType', 11)
    BOOL = typing___cast('GrpcBaseProtoType', 12)
    STRING = typing___cast('GrpcBaseProtoType', 13)
    BYTES = typing___cast('GrpcBaseProtoType', 14)
DOUBLE = typing___cast('GrpcBaseProtoType', 0)
FLOAT = typing___cast('GrpcBaseProtoType', 1)
INT32 = typing___cast('GrpcBaseProtoType', 2)
INT64 = typing___cast('GrpcBaseProtoType', 3)
UINT32 = typing___cast('GrpcBaseProtoType', 4)
UINT64 = typing___cast('GrpcBaseProtoType', 5)
SINT32 = typing___cast('GrpcBaseProtoType', 6)
SINT64 = typing___cast('GrpcBaseProtoType', 7)
FIXED32 = typing___cast('GrpcBaseProtoType', 8)
FIXED64 = typing___cast('GrpcBaseProtoType', 9)
SFIXED32 = typing___cast('GrpcBaseProtoType', 10)
SFIXED64 = typing___cast('GrpcBaseProtoType', 11)
BOOL = typing___cast('GrpcBaseProtoType', 12)
STRING = typing___cast('GrpcBaseProtoType', 13)
BYTES = typing___cast('GrpcBaseProtoType', 14)

class GrpcProtoType(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    type = ... # type: GrpcBaseProtoType
    repeated = ... # type: builtin___bool

    def __init__(self,
        *,
        type : typing___Optional[GrpcBaseProtoType] = None,
        repeated : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: builtin___bytes) -> GrpcProtoType: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"repeated",u"type"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"repeated",b"repeated",u"type",b"type"]) -> None: ...
