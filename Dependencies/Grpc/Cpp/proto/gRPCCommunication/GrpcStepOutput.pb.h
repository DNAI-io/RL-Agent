// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/gRPCCommunication/GrpcStepOutput.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fgRPCCommunication_2fGrpcStepOutput_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fgRPCCommunication_2fGrpcStepOutput_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "proto/gRPCCommunication/GrpcProtoType.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_proto_2fgRPCCommunication_2fGrpcStepOutput_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fgRPCCommunication_2fGrpcStepOutput_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fgRPCCommunication_2fGrpcStepOutput_2eproto;
namespace gRPCCommunication {
class GrpcStepOutput;
class GrpcStepOutputDefaultTypeInternal;
extern GrpcStepOutputDefaultTypeInternal _GrpcStepOutput_default_instance_;
class GrpcStepOutput_InfoEntry_DoNotUse;
class GrpcStepOutput_InfoEntry_DoNotUseDefaultTypeInternal;
extern GrpcStepOutput_InfoEntry_DoNotUseDefaultTypeInternal _GrpcStepOutput_InfoEntry_DoNotUse_default_instance_;
}  // namespace gRPCCommunication
PROTOBUF_NAMESPACE_OPEN
template<> ::gRPCCommunication::GrpcStepOutput* Arena::CreateMaybeMessage<::gRPCCommunication::GrpcStepOutput>(Arena*);
template<> ::gRPCCommunication::GrpcStepOutput_InfoEntry_DoNotUse* Arena::CreateMaybeMessage<::gRPCCommunication::GrpcStepOutput_InfoEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace gRPCCommunication {

// ===================================================================

class GrpcStepOutput_InfoEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<GrpcStepOutput_InfoEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<GrpcStepOutput_InfoEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  GrpcStepOutput_InfoEntry_DoNotUse();
  GrpcStepOutput_InfoEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const GrpcStepOutput_InfoEntry_DoNotUse& other);
  static const GrpcStepOutput_InfoEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GrpcStepOutput_InfoEntry_DoNotUse*>(&_GrpcStepOutput_InfoEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), s->size(), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "gRPCCommunication.GrpcStepOutput.InfoEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2fgRPCCommunication_2fGrpcStepOutput_2eproto);
    return ::descriptor_table_proto_2fgRPCCommunication_2fGrpcStepOutput_2eproto.file_level_metadata[0];
  }

  public:
};

// -------------------------------------------------------------------

class GrpcStepOutput :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gRPCCommunication.GrpcStepOutput) */ {
 public:
  GrpcStepOutput();
  virtual ~GrpcStepOutput();

  GrpcStepOutput(const GrpcStepOutput& from);
  GrpcStepOutput(GrpcStepOutput&& from) noexcept
    : GrpcStepOutput() {
    *this = ::std::move(from);
  }

  inline GrpcStepOutput& operator=(const GrpcStepOutput& from) {
    CopyFrom(from);
    return *this;
  }
  inline GrpcStepOutput& operator=(GrpcStepOutput&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GrpcStepOutput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GrpcStepOutput* internal_default_instance() {
    return reinterpret_cast<const GrpcStepOutput*>(
               &_GrpcStepOutput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GrpcStepOutput* other);
  friend void swap(GrpcStepOutput& a, GrpcStepOutput& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GrpcStepOutput* New() const final {
    return CreateMaybeMessage<GrpcStepOutput>(nullptr);
  }

  GrpcStepOutput* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GrpcStepOutput>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GrpcStepOutput& from);
  void MergeFrom(const GrpcStepOutput& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GrpcStepOutput* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gRPCCommunication.GrpcStepOutput";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_2fgRPCCommunication_2fGrpcStepOutput_2eproto);
    return ::descriptor_table_proto_2fgRPCCommunication_2fGrpcStepOutput_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated float floatObervations = 2;
  int floatobervations_size() const;
  void clear_floatobervations();
  static const int kFloatObervationsFieldNumber = 2;
  float floatobervations(int index) const;
  void set_floatobervations(int index, float value);
  void add_floatobervations(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      floatobervations() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_floatobervations();

  // repeated int32 intObervations = 3;
  int intobervations_size() const;
  void clear_intobervations();
  static const int kIntObervationsFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 intobervations(int index) const;
  void set_intobervations(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_intobervations(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      intobervations() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_intobervations();

  // map<string, bytes> info = 6;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 6;
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      info() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_info();

  // repeated .gRPCCommunication.GrpcProtoType obervationType = 7;
  int obervationtype_size() const;
  void clear_obervationtype();
  static const int kObervationTypeFieldNumber = 7;
  ::gRPCCommunication::GrpcProtoType* mutable_obervationtype(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gRPCCommunication::GrpcProtoType >*
      mutable_obervationtype();
  const ::gRPCCommunication::GrpcProtoType& obervationtype(int index) const;
  ::gRPCCommunication::GrpcProtoType* add_obervationtype();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gRPCCommunication::GrpcProtoType >&
      obervationtype() const;

  // repeated .gRPCCommunication.GrpcProtoType infoType = 8;
  int infotype_size() const;
  void clear_infotype();
  static const int kInfoTypeFieldNumber = 8;
  ::gRPCCommunication::GrpcProtoType* mutable_infotype(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gRPCCommunication::GrpcProtoType >*
      mutable_infotype();
  const ::gRPCCommunication::GrpcProtoType& infotype(int index) const;
  ::gRPCCommunication::GrpcProtoType* add_infotype();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gRPCCommunication::GrpcProtoType >&
      infotype() const;

  // string stringObervations = 1;
  void clear_stringobervations();
  static const int kStringObervationsFieldNumber = 1;
  const std::string& stringobervations() const;
  void set_stringobervations(const std::string& value);
  void set_stringobervations(std::string&& value);
  void set_stringobervations(const char* value);
  void set_stringobervations(const char* value, size_t size);
  std::string* mutable_stringobervations();
  std::string* release_stringobervations();
  void set_allocated_stringobervations(std::string* stringobervations);

  // float reward = 4;
  void clear_reward();
  static const int kRewardFieldNumber = 4;
  float reward() const;
  void set_reward(float value);

  // bool done = 5;
  void clear_done();
  static const int kDoneFieldNumber = 5;
  bool done() const;
  void set_done(bool value);

  // @@protoc_insertion_point(class_scope:gRPCCommunication.GrpcStepOutput)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > floatobervations_;
  mutable std::atomic<int> _floatobervations_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > intobervations_;
  mutable std::atomic<int> _intobervations_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      GrpcStepOutput_InfoEntry_DoNotUse,
      std::string, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BYTES,
      0 > info_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gRPCCommunication::GrpcProtoType > obervationtype_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gRPCCommunication::GrpcProtoType > infotype_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stringobervations_;
  float reward_;
  bool done_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2fgRPCCommunication_2fGrpcStepOutput_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GrpcStepOutput

// string stringObervations = 1;
inline void GrpcStepOutput::clear_stringobervations() {
  stringobervations_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GrpcStepOutput::stringobervations() const {
  // @@protoc_insertion_point(field_get:gRPCCommunication.GrpcStepOutput.stringObervations)
  return stringobervations_.GetNoArena();
}
inline void GrpcStepOutput::set_stringobervations(const std::string& value) {
  
  stringobervations_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gRPCCommunication.GrpcStepOutput.stringObervations)
}
inline void GrpcStepOutput::set_stringobervations(std::string&& value) {
  
  stringobervations_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gRPCCommunication.GrpcStepOutput.stringObervations)
}
inline void GrpcStepOutput::set_stringobervations(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  stringobervations_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gRPCCommunication.GrpcStepOutput.stringObervations)
}
inline void GrpcStepOutput::set_stringobervations(const char* value, size_t size) {
  
  stringobervations_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gRPCCommunication.GrpcStepOutput.stringObervations)
}
inline std::string* GrpcStepOutput::mutable_stringobervations() {
  
  // @@protoc_insertion_point(field_mutable:gRPCCommunication.GrpcStepOutput.stringObervations)
  return stringobervations_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GrpcStepOutput::release_stringobervations() {
  // @@protoc_insertion_point(field_release:gRPCCommunication.GrpcStepOutput.stringObervations)
  
  return stringobervations_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GrpcStepOutput::set_allocated_stringobervations(std::string* stringobervations) {
  if (stringobervations != nullptr) {
    
  } else {
    
  }
  stringobervations_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stringobervations);
  // @@protoc_insertion_point(field_set_allocated:gRPCCommunication.GrpcStepOutput.stringObervations)
}

// repeated float floatObervations = 2;
inline int GrpcStepOutput::floatobervations_size() const {
  return floatobervations_.size();
}
inline void GrpcStepOutput::clear_floatobervations() {
  floatobervations_.Clear();
}
inline float GrpcStepOutput::floatobervations(int index) const {
  // @@protoc_insertion_point(field_get:gRPCCommunication.GrpcStepOutput.floatObervations)
  return floatobervations_.Get(index);
}
inline void GrpcStepOutput::set_floatobervations(int index, float value) {
  floatobervations_.Set(index, value);
  // @@protoc_insertion_point(field_set:gRPCCommunication.GrpcStepOutput.floatObervations)
}
inline void GrpcStepOutput::add_floatobervations(float value) {
  floatobervations_.Add(value);
  // @@protoc_insertion_point(field_add:gRPCCommunication.GrpcStepOutput.floatObervations)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
GrpcStepOutput::floatobervations() const {
  // @@protoc_insertion_point(field_list:gRPCCommunication.GrpcStepOutput.floatObervations)
  return floatobervations_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
GrpcStepOutput::mutable_floatobervations() {
  // @@protoc_insertion_point(field_mutable_list:gRPCCommunication.GrpcStepOutput.floatObervations)
  return &floatobervations_;
}

// repeated int32 intObervations = 3;
inline int GrpcStepOutput::intobervations_size() const {
  return intobervations_.size();
}
inline void GrpcStepOutput::clear_intobervations() {
  intobervations_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GrpcStepOutput::intobervations(int index) const {
  // @@protoc_insertion_point(field_get:gRPCCommunication.GrpcStepOutput.intObervations)
  return intobervations_.Get(index);
}
inline void GrpcStepOutput::set_intobervations(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  intobervations_.Set(index, value);
  // @@protoc_insertion_point(field_set:gRPCCommunication.GrpcStepOutput.intObervations)
}
inline void GrpcStepOutput::add_intobervations(::PROTOBUF_NAMESPACE_ID::int32 value) {
  intobervations_.Add(value);
  // @@protoc_insertion_point(field_add:gRPCCommunication.GrpcStepOutput.intObervations)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
GrpcStepOutput::intobervations() const {
  // @@protoc_insertion_point(field_list:gRPCCommunication.GrpcStepOutput.intObervations)
  return intobervations_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
GrpcStepOutput::mutable_intobervations() {
  // @@protoc_insertion_point(field_mutable_list:gRPCCommunication.GrpcStepOutput.intObervations)
  return &intobervations_;
}

// float reward = 4;
inline void GrpcStepOutput::clear_reward() {
  reward_ = 0;
}
inline float GrpcStepOutput::reward() const {
  // @@protoc_insertion_point(field_get:gRPCCommunication.GrpcStepOutput.reward)
  return reward_;
}
inline void GrpcStepOutput::set_reward(float value) {
  
  reward_ = value;
  // @@protoc_insertion_point(field_set:gRPCCommunication.GrpcStepOutput.reward)
}

// bool done = 5;
inline void GrpcStepOutput::clear_done() {
  done_ = false;
}
inline bool GrpcStepOutput::done() const {
  // @@protoc_insertion_point(field_get:gRPCCommunication.GrpcStepOutput.done)
  return done_;
}
inline void GrpcStepOutput::set_done(bool value) {
  
  done_ = value;
  // @@protoc_insertion_point(field_set:gRPCCommunication.GrpcStepOutput.done)
}

// map<string, bytes> info = 6;
inline int GrpcStepOutput::info_size() const {
  return info_.size();
}
inline void GrpcStepOutput::clear_info() {
  info_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
GrpcStepOutput::info() const {
  // @@protoc_insertion_point(field_map:gRPCCommunication.GrpcStepOutput.info)
  return info_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
GrpcStepOutput::mutable_info() {
  // @@protoc_insertion_point(field_mutable_map:gRPCCommunication.GrpcStepOutput.info)
  return info_.MutableMap();
}

// repeated .gRPCCommunication.GrpcProtoType obervationType = 7;
inline int GrpcStepOutput::obervationtype_size() const {
  return obervationtype_.size();
}
inline ::gRPCCommunication::GrpcProtoType* GrpcStepOutput::mutable_obervationtype(int index) {
  // @@protoc_insertion_point(field_mutable:gRPCCommunication.GrpcStepOutput.obervationType)
  return obervationtype_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gRPCCommunication::GrpcProtoType >*
GrpcStepOutput::mutable_obervationtype() {
  // @@protoc_insertion_point(field_mutable_list:gRPCCommunication.GrpcStepOutput.obervationType)
  return &obervationtype_;
}
inline const ::gRPCCommunication::GrpcProtoType& GrpcStepOutput::obervationtype(int index) const {
  // @@protoc_insertion_point(field_get:gRPCCommunication.GrpcStepOutput.obervationType)
  return obervationtype_.Get(index);
}
inline ::gRPCCommunication::GrpcProtoType* GrpcStepOutput::add_obervationtype() {
  // @@protoc_insertion_point(field_add:gRPCCommunication.GrpcStepOutput.obervationType)
  return obervationtype_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gRPCCommunication::GrpcProtoType >&
GrpcStepOutput::obervationtype() const {
  // @@protoc_insertion_point(field_list:gRPCCommunication.GrpcStepOutput.obervationType)
  return obervationtype_;
}

// repeated .gRPCCommunication.GrpcProtoType infoType = 8;
inline int GrpcStepOutput::infotype_size() const {
  return infotype_.size();
}
inline ::gRPCCommunication::GrpcProtoType* GrpcStepOutput::mutable_infotype(int index) {
  // @@protoc_insertion_point(field_mutable:gRPCCommunication.GrpcStepOutput.infoType)
  return infotype_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gRPCCommunication::GrpcProtoType >*
GrpcStepOutput::mutable_infotype() {
  // @@protoc_insertion_point(field_mutable_list:gRPCCommunication.GrpcStepOutput.infoType)
  return &infotype_;
}
inline const ::gRPCCommunication::GrpcProtoType& GrpcStepOutput::infotype(int index) const {
  // @@protoc_insertion_point(field_get:gRPCCommunication.GrpcStepOutput.infoType)
  return infotype_.Get(index);
}
inline ::gRPCCommunication::GrpcProtoType* GrpcStepOutput::add_infotype() {
  // @@protoc_insertion_point(field_add:gRPCCommunication.GrpcStepOutput.infoType)
  return infotype_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gRPCCommunication::GrpcProtoType >&
GrpcStepOutput::infotype() const {
  // @@protoc_insertion_point(field_list:gRPCCommunication.GrpcStepOutput.infoType)
  return infotype_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace gRPCCommunication

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_proto_2fgRPCCommunication_2fGrpcStepOutput_2eproto
